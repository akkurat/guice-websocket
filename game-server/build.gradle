buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'cz.habarta.typescript-generator', name: 'typescript-generator-gradle-plugin', version: '2.28.785'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

apply plugin: 'cz.habarta.typescript-generator'

apply from: '../commons.gradle'

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation project(':jass-game')
//    implementation project(':game-server-nonjigsaw')
    implementation files('../crap.jar')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-messaging'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compileOnly("org.springframework.boot:spring-boot-devtools")
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    compileOnly 'org.projectlombok:lombok:1.18.16'
}

test {
    useJUnitPlatform()
}
generateTypeScript {
    classes = [ 'ch.taburett.gameworld.messages.UserMapEvent' ]
    classesImplementingInterfaces = ['ch.taburett.jass.game.spi.events.server.IServerMessage']
    outputFile = '../ngjass/src/app/java.d.ts'
    outputKind = 'global'
    jsonLibrary = 'jackson2'
}

java {
    modularity.inferModulePath = true
}

